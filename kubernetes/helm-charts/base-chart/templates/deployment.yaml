{{- if and (not .Values.statefulset) (not .Values.job) (not .Values.cronjob) (not .Values.rollout) .Values.image }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicas }}
  {{- if .Values.strategy }}
  strategy:
  {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.prometheus }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ default "9090" (.Values.prometheus).port | quote }}
        prometheus.io/path: {{ default "/metrics" (.Values.prometheus).path | quote }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.affinity }}
      affinity:
        {{- if .Values.affinity.podAntiAffinity }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ .Values.affinity.podAntiAffinity.keyValue }}
              topologyKey:  {{ .Values.affinity.podAntiAffinity.topologyKey }}
            weight: {{ .Values.affinity.podAntiAffinity.weight }}
        {{- end }}
        {{- if .Values.affinity.key }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.affinity.key }}
                operator: In
                values:
                - {{ .Values.affinity.value }}
      tolerations:
        - effect: NoSchedule
          key: {{ .Values.affinity.key }}
          operator: Equal
          value: {{ .Values.affinity.value }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "app.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
          {{- if .Values.workDir }}
          workingDir: {{ .Values.workDir }}
          {{- end }}
          {{- if .Values.command }}
          command:
          {{- range .Values.command }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
{{ toYaml .Values.securityContext  | indent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
          {{- range .Values.args }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.service }}
          ports:
          - containerPort: {{ .Values.service.containerPort }}
            name: {{ include "app.name" . | trunc 15 }}
          {{- end }}
          {{- if .Values.env.enabled }}
          envFrom:
          {{- if .Values.env.configs }}
          - configMapRef:
              name: {{ include "app.name" . }}-config
          {{- end }}
          {{- if .Values.env.secrets }}
          - secretRef:
              name: {{ include "app.name" . }}-secret
          {{- end }}
          {{- end }}

          {{- if .Values.probes }}
          livenessProbe:
            httpGet:
              path: {{ default "/internal/alive" .Values.probes.livenessPath }}
              port:  {{ .Values.service.containerPort }}
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: {{ default "/internal/ready" .Values.probes.readinessPath }}
              port:  {{ .Values.service.containerPort }}
{{ toYaml .Values.probes.readiness | indent 12 }}
          {{- end }}

          {{- with .Values.resources }}
          resources:
{{ toYaml . | indent 12 }}
          {{- end }}

          {{- if .Values.volumes }}
          volumeMounts:
            - mountPath: {{ .Values.volumes.path }}
              name: data
          {{- if .Values.extraVolumes }}    
          {{- range $index, $volume := .Values.extraVolumes }}
            - mountPath: {{ $volume.path }}
              name: data-{{ add $index 1 }}
          {{- end }}
          {{- end }}
          {{- end }}

      {{- if .Values.volumes }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "app.name" . }}-pvc
      {{- if .Values.extraVolumes }}
      {{- range $index, $volume := .Values.extraVolumes }}
        - name: data-{{ add $index 1 }}
          persistentVolumeClaim:
            claimName: {{ include "app.name" $ }}-pvc-{{ add $index 1 }}
      {{- end }}
      {{- end }}
      {{- end }}
{{- end }}
